/*fonts*/
@font-face {
  font-family: "DOS-V";
  src: url("/assets/fonts/Px437_DOS-V_TWN16.ttf") format("truetype");
}

@font-face {
  font-family: "IBM-DOS";
  src: url("/assets/fonts/Px437_IBM_DOS_ISO9.ttf") format("truetype");
}

@font-face {
  font-family: "IBM-BIOS";
  src: url("/assets/fonts/Px437_IBM_BIOS-2x.ttf") format("truetype");
}

body {
  font-family: "DOS-V";
}

body.lang-en {
  font-family: "DOS-V";
  line-height: 1.4;
}

body.lang-jp {
  font-size: 18px;
  font-family: "Noto Sans JP", "Hiragino Kaku Gothic Pro", Meiryo, sans-serif;
  line-height: 1.6;
}

body.lang-en h1,
body.lang-en h2,
body.lang-en h3,
body.lang-en h4 {
  font-weight: bold;
  font-family: "PixelCaps!";
  letter-spacing: 2px;
}

body.lang-jp h1,
body.lang-jp h2,
body.lang-jp h3,
body.lang-jp h4 {
  letter-spacing: 0.05em;
  font-family: "Madou";
}

body.lang-jp h1 {
  font-size: 16pt;
}

body.lang-jp h2 {
  font-size: 14pt;
}

body.lang-jp h3 {
  font-size: 12pt;
}

body.lang-jp h4 {
  font-size: 10pt;
}
/*fonts - END*/

/*basic stylings*/
*,
*::before,
*::after {
  box-sizing: border-box;
}

body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

ul[role=list],
ol[role=list] {
  list-style: none;
}

html:focus-within {
  scroll-behavior: smooth;
}

body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

a:not([class]) {
  text-decoration-skip-ink: auto;
}

img,
picture {
  max-width: 100%;
  display: block;
}

input,
button,
textarea,
select {
  font: inherit;
}
/*basic styling - END*/

/*utility classes*/
.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.justify {
  justify-content: center;
  align-items: center;
}

.wrap {
  flex-wrap: wrap;
}

.row {
  flex-direction: row;
}

.flow>*:where(:not(:first-child)) {
  margin-top: var(--flow-spacer, 1em);
}

.p-em1 {
  padding: 1em;
}

.b {
  font-weight: bold;
}

.text-right {
  text-align: right;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.no-underline {
  text-decoration: none;
}

.align-self {
  align-self: center;
}

.noselect {
  -webkit-touch-callout: none;
  /* iOS Safari */
  -webkit-user-select: none;
  /* Safari */
  -khtml-user-select: none;
  /* Konqueror HTML */
  -moz-user-select: none;
  /* Old versions of Firefox */
  -ms-user-select: none;
  /* Internet Explorer/Edge */
  user-select: none;
}
/*utility classes - END*/

/*tree-styled lists*/
.tree {
  --spacing: 1.5rem;
  --radius: 10px;
}

.tree li {
  display: block;
  position: relative;
  padding-left: calc(2 * var(--spacing) - var(--radius) - 2px);
}

.tree ul {
  margin-left: calc(var(--radius) - var(--spacing));
  padding-left: 0;
  display: flex;
}

.tree ul li {
  border-left: 2px solid #ddd;
}

.tree ul li:last-child {
  border-color: transparent;
}

.tree ul li::before {
  content: '';
  display: block;
  position: absolute;
  top: calc(var(--spacing) / -2);
  left: -2px;
  width: calc(var(--spacing) + 2px);
  height: calc(var(--spacing) + 1px);
  border: solid #ddd;
  border-width: 0 0 2px 2px;
}

.tree summary {
  display: block;
  cursor: pointer;
}

.tree summary::marker,
.tree summary::-webkit-details-marker {
  display: none;
}

.tree summary:focus {
  outline: none;
}

.tree summary:focus-visible {
  outline: 1px dotted #000;
}

.tree li::after,
.tree summary::before {
  content: '';
  display: block;
  position: absolute;
  top: calc(var(--spacing) / 2 - var(--radius));
  left: calc(var(--spacing) - var(--radius) - 1px);
  width: calc(2 * var(--radius));
  height: calc(2 * var(--radius));
  border-radius: 50%;
  background: #ddd;
}

.tree summary::before {
  z-index: 1;
  background: #696 url('expand-collapse.svg') 0 0;
}

.tree details[open]>summary::before {
  background-position: calc(-2 * var(--radius)) 0;
}
/*tree-styled lists - END*/


        /*tags and text*/
        .tag {
          padding: 2px;
          color: #000;
          text-decoration: none;
        }

        .red {
          background: red;
        }

        .orange {
          background: orange;
        }

        .yellow {
          background: yellow;
        }

        .lime {
          background: lime;
        }

        .cyan {
          background: cyan;
        }

        .blue {
          background: blue;
        }

        .pink {
          background: magenta;
        }

        .purple {
          background: purple;
        }

        .blacktext {
          color: black;
        }

        .text-cyan {
          color: cyan;
        }

        /*animations*/
        @keyframes bounce {
          0% {scale: 1 1;}
          10% {scale: 0.8 1.1;}
          40% {scale: 1.1 0.9;}
          100% {scale: 1 1;}
        }

        @keyframes FadeIn {
          0% {opacity: 0;}
          100% {opacity: 1;}
        }

        @keyframes FlyIn {
          0% {transform: translateY(-2em);}
        }

        @keyframes rainbow {
          0% {filter: blur(10px) hue-rotate(0deg);}
          50% {filter: blur(15px) hue-rotate(2880deg);}
          100% {filter: blur(10px) hue-rotate(0deg);}
      }

      @keyframes rainbow2 {
          0% {filter: opacity(10%) blur(0px) hue-rotate(0deg);}
          50% {filter: opacity(15%) blur(5px) hue-rotate(2880deg);}
          100% {filter: opacity(10%) blur(0px) hue-rotate(0deg);}
      }

      @keyframes float1 {
          0% {transform: translate(0px, 10px); filter: drop-shadow(0px 8px 2px #00000055);}
          50% {transform: translate(0px, -10px); filter: drop-shadow(0px 20px 6px #00000055);}
          100% {transform: translate(0px, 10px); filter: drop-shadow(0px 8px 2px #00000055);}
      }

      @keyframes float2 {
          0% {transform: translate(0px, 5px); filter: drop-shadow(0px 8px 2px #00000055);}
          50% {transform: translate(0px, -5px); filter: drop-shadow(0px 20px 6px #00000055);}
          100% {transform: translate(0px, 5px); filter: drop-shadow(0px 8px 2px #00000055);}
      }
      
      @keyframes pulse {
          0%   {transform: scale(1);}
          50%  {transform: scale(0.95);}
          100% {transform: scale(1);}
      }

      @keyframes pulse2 {
      0%   {transform: rotate(-3deg) translate(0px, 0px);}
      50%  {transform: rotate(2deg) translate(0px, 8px);}
      100% {transform: rotate(-3deg) translate(0px, 0px);}
      }